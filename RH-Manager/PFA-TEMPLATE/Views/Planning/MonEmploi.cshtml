@model EmploiDuTemps
@using PFA_TEMPLATE.Models
@using PFA_TEMPLATE.ViewModels
@{
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    ViewData["Title"] = "Mon emploi du temps";
} 
<!-- Main container -->
<!-- Main container -->
<div class="schedule-container">
    <!-- Employee info header -->
    <div class="employee-card">
        <h2>Planning de @Model.Employee.Utilisateur.Prenom @Model.Employee.Utilisateur.Nom</h2>
        <p>Généré le @Model.DateGeneration.ToString("dd/MM/yyyy à HH:mm")</p>
    </div>

    <!-- Action buttons -->
    <div class="action-row">
       
        <a href="javascript:void(0)" onclick="exportPDF()" class="btn btn-primary">
            <i class="fas fa-file-pdf"></i> Exporter PDF
        </a>
    </div>

    <!-- Calendar card -->
    <div class="calendar-card">
        <div class="calendar-header">
            <i class="far fa-calendar-alt"></i> Planning du @Model.ContraintesPlanning.DateDebut.ToString("dd/MM/yyyy") au @Model.ContraintesPlanning.DateFin.ToString("dd/MM/yyyy")
        </div>
        <div class="calendar-body">
            <div id="calendar"></div>

            <!-- Legend -->
            <div class="activity-legend">
                <h4>Légende</h4>
                <div class="legend-items">
                    <div class="legend-item">
                        <div class="color-box travail"></div>
                        <span>Travail</span>
                    </div>
                    <div class="legend-item">
                        <div class="color-box pause"></div>
                        <span>Pause</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" /> 
    <link href="~/css/emploi.css" rel="stylesheet" asp-append-version="true" />
}
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/locales-all.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>

    <script>
        var calendar; // Déclarer calendar au niveau global pour y accéder dans exportPDF

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            // Create an array of events from the model
            var modelEvents = [];

        @foreach (var plage in Model.PlagesHoraires)
        {
            @: modelEvents.push({
            @: id: '@plage.Id',
            @: title: '@plage.Commentaire',
            @: start: '@plage.DateDebut.ToString("yyyy-MM-ddTHH:mm:ss")',
            @: end: '@plage.DateFin.ToString("yyyy-MM-ddTHH:mm:ss")',
            @: className: 'fc-event-@plage.TypeActivite.ToLower()'
            @:});
        }

            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                weekends: true,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                locale: 'fr',
                slotMinTime: '@Model.ContraintesPlanning.HeureDebutJournee:00',
                slotMaxTime: '@Model.ContraintesPlanning.HeureFinJournee:00',
                allDaySlot: false,
                weekends: true,
                height: 'auto',
                events: modelEvents,
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                }

            });

            calendar.render();
        });

        // Fonction pour exporter uniquement la partie .calendar-card en PDF
        function exportPDF() {
               const element = document.querySelector('.calendar-card');
                document.body.classList.add('exporting-pdf');

        const opt = {
            margin: 10,
            filename: 'calendar.pdf',
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: {
                scale: 2,
                width: 1000, // Set a wider width
                windowWidth: 1100 // Match window width to capture entire calendar
            },
            jsPDF: { unit: 'mm', format: 'a3', orientation: 'landscape' } // Use A3 landscape for more space
        };
              html2pdf().set(opt).from(element).save().then(() => { 
            document.body.classList.remove('exporting-pdf');
        });
       
        }
    </script>
}