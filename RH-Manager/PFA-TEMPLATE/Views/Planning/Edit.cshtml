@using PFA_TEMPLATE.Models
@using PFA_TEMPLATE.ViewModels
@model EmploiDuTemps

@{
    ViewData["Title"] = "Modification du planning";
}
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2>Modification du planning de @(Model.Employee?.Utilisateur?.Prenom ?? "Inconnu") @(Model.Employee?.Utilisateur?.Nom ?? "Inconnu")</h2>

<div class="row mb-3">
    <div class="col-md-12">
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info">Retour aux détails</a>
        <a asp-action="Index" class="btn btn-secondary">Retour à la liste</a>
    </div>
</div>


<div class="card shadow-sm border-0 mt-4">
    <div class="card-header bg-gradient-primary text-white d-flex justify-content-between align-items-center">
        Planning du @Model.ContraintesPlanning.DateDebut.ToString("dd/MM/yyyy") au @Model.ContraintesPlanning.DateFin.ToString("dd/MM/yyyy")
    </div>
    <div class="card-body">
        <div id="calendar"></div>
    </div>
</div>

<div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventModalLabel">Détails de l'événement</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="eventId" />
                <input type="hidden" id="emploiId" value="@Model.Id" />

                <div class="form-group">
                    <label for="eventTitle">Titre</label>
                    <input type="text" id="eventTitle" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="eventType">Type</label>
                    <select id="eventType" class="form-control">
                        <option value="Travail">Travail</option>
                        <option value="Pause">Pause</option>
                        <option value="Reunion">Réunion</option>
                        <option value="Formation">Formation</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="eventStart">Début</label>
                    <input type="datetime-local" id="eventStart" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="eventEnd">Fin</label>
                    <input type="datetime-local" id="eventEnd" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="deleteEventBtn" class="btn btn-danger">Supprimer</button> 
                <button type="button" id="saveEventBtn" class="btn btn-primary">Enregistrer</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link href="~/css/emploi.css" rel="stylesheet" asp-append-version="true" />
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/locales-all.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                locale: 'fr',
                slotMinTime: '@Model.ContraintesPlanning.HeureDebutJournee:00',
                slotMaxTime: '@Model.ContraintesPlanning.HeureFinJournee:00',
                allDaySlot: false,
                height: 'auto',
                selectable: true,
                editable: true,
                events: [
        @foreach (var plage in Model.PlagesHoraires)
        {
            @:{
            @:    id: '@plage.Id',
            @:    title: '@plage.Commentaire',
            @:    start: '@plage.DateDebut.ToString("yyyy-MM-ddTHH:mm:ss")',
            @:    end: '@plage.DateFin.ToString("yyyy-MM-ddTHH:mm:ss")',
            @:    className: 'fc-event-@plage.TypeActivite.ToLower()',
            @:    type: '@plage.TypeActivite'
            @:},
        }
                ],
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                select: function(info) {
                    // Nouveau créneau
                    $('#eventId').val('');
                    $('#eventTitle').val('');
                    $('#eventType').val('Travail');

                    var start = new Date(info.start);
                    var end = new Date(info.end);

                    $('#eventStart').val(formatDatetimeLocal(start));
                    $('#eventEnd').val(formatDatetimeLocal(end));

                    $('#deleteEventBtn').hide();
                    $('#eventModal').modal('show');
                },
                eventClick: function(info) {
                    // Édition d'un créneau existant
                    $('#eventId').val(info.event.id);
                    $('#eventTitle').val(info.event.title);
                    $('#eventType').val(info.event.extendedProps.type);

                    var start = new Date(info.event.start);
                    var end = new Date(info.event.end);

                    $('#eventStart').val(formatDatetimeLocal(start));
                    $('#eventEnd').val(formatDatetimeLocal(end));

                    $('#deleteEventBtn').show();
                    $('#eventModal').modal('show');
                },
                eventDrop: function(info) {
                    saveEvent(
                        info.event.id,
                        new Date(info.event.start),
                        new Date(info.event.end),
                        info.event.title,
                        info.event.extendedProps.type
                    );
                },
                eventResize: function(info) {
                    saveEvent(
                        info.event.id,
                        new Date(info.event.start),
                        new Date(info.event.end),
                        info.event.title,
                        info.event.extendedProps.type
                    );
                }
            });

            calendar.render();

            // Gestionnaires d'événements pour le modal
            $('#saveEventBtn').click(function() {
                var id = $('#eventId').val();
                var emploiId = $('#emploiId').val();
                var title = $('#eventTitle').val();
                var type = $('#eventType').val();
                var start = new Date($('#eventStart').val());
                var end = new Date($('#eventEnd').val());

                saveEvent(id, start, end, title, type);
                $('#eventModal').modal('hide');

                // Rafraîchir le calendrier
                calendar.refetchEvents();
            });

            $('#deleteEventBtn').click(function() {
                var id = $('#eventId').val();

                if (id) {
                    $.ajax({
                        url: '@Url.Action("DeleteEvent")',
                        type: 'POST',
                        data: { id: id },
                        success: function(response) {
                            if (response.success) {
                                calendar.getEventById(id).remove();
                                $('#eventModal').modal('hide');
                            } else {
                                alert('Erreur: ' + response.message);
                            }
                        },
                        error: function(xhr, status, error) {
                            alert('Erreur: ' + error);
                        }
                    });
                }
            });

            // Fonctions utilitaires
            function formatDatetimeLocal(date) {
                return date.getFullYear() + '-' +
                    pad(date.getMonth() + 1) + '-' +
                    pad(date.getDate()) + 'T' +
                    pad(date.getHours()) + ':' +
                    pad(date.getMinutes());
            }

            function pad(number) {
                return (number < 10 ? '0' : '') + number;
            }

            function saveEvent(id, start, end, title, type) {
                $.ajax({
                    url: '@Url.Action("SaveEvent")',
                    type: 'POST',
                    data: {
                        emploiId: $('#emploiId').val(),
                        plageId: id || null,
                        start: start.toISOString(),
                        end: end.toISOString(),
                        title: title,
                        type: type
                    },
                    success: function(response) {
                        if (response.success) {
                            calendar.refetchEvents();
                        } else {
                            alert('Erreur: ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Erreur: ' + error);
                    }
                });
            }
        });
    </script>
}