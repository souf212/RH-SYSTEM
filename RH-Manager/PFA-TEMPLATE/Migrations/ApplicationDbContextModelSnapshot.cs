// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFA_TEMPLATE.Data;

#nullable disable

namespace PFA_TEMPLATE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PFA_TEMPLATE.Models.CongeBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Annee")
                        .HasColumnType("int");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<decimal>("JoursCongesPayesTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("JoursCongesPayesUtilises")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("JoursMaladieTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("JoursMaladieUtilises")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmploye", "Annee")
                        .IsUnique();

                    b.ToTable("CongeBalances");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Conges", b =>
                {
                    b.Property<int>("IdConges")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdConges"));

                    b.Property<string>("AdminComment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdConges");

                    b.HasIndex("IdEmploye");

                    b.ToTable("Conges");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.ContraintesPlanning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DureeMaximaleJournaliere")
                        .HasColumnType("int");

                    b.Property<int>("DureeMinimaleJournaliere")
                        .HasColumnType("int");

                    b.Property<int>("HeureDebutJournee")
                        .HasColumnType("int");

                    b.Property<int>("HeureFinJournee")
                        .HasColumnType("int");

                    b.Property<string>("JoursFeries")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PauseMinimum")
                        .HasColumnType("int");

                    b.Property<bool>("WeekEndInclus")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("ContraintesPlanning");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.EmploiDuTemps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContraintesPlanningId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateGeneration")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContraintesPlanningId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploiDuTemps");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Employes", b =>
                {
                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("int");

                    b.HasKey("IdEmploye");

                    b.HasIndex("IdUtilisateur")
                        .IsUnique();

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<int?>("IdTache")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdEmploye");

                    b.HasIndex("IdTache");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.PlageHoraire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmploiDuTempsId")
                        .HasColumnType("int");

                    b.Property<string>("TypeActivite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmploiDuTempsId");

                    b.ToTable("PlageHoraire");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Taches", b =>
                {
                    b.Property<int>("IdTaches")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTaches"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdTaches");

                    b.HasIndex("IdEmploye");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Absences", b =>
                {
                    b.Property<int>("IdAbsences")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAbsences"));

                    b.Property<DateTime>("DateAbsence")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .HasColumnType("longtext");

                    b.HasKey("IdAbsences");

                    b.HasIndex("IdEmploye");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Administrateur", b =>
                {
                    b.Property<int>("IdAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("int");

                    b.HasKey("IdAdmin");

                    b.HasIndex("IdUtilisateur")
                        .IsUnique();

                    b.ToTable("Administrateurs");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Contrat", b =>
                {
                    b.Property<int>("IdContrat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdContrat"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<decimal>("SalaireDeBase")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TypeContrat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdContrat");

                    b.HasIndex("IdEmploye");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.FicheDePaie", b =>
                {
                    b.Property<int>("IdFicheDePaie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdFicheDePaie"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdContrat")
                        .HasColumnType("int");

                    b.Property<decimal>("SalaireNet")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdFicheDePaie");

                    b.HasIndex("IdContrat");

                    b.ToTable("FichesDePaie");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.HistoriqueAbsences", b =>
                {
                    b.Property<int>("IdHistoriqueAbsences")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHistoriqueAbsences"));

                    b.Property<int>("IdAbsences")
                        .HasColumnType("int");

                    b.HasKey("IdHistoriqueAbsences");

                    b.HasIndex("IdAbsences");

                    b.ToTable("HistoriqueAbsences");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.HistoriqueConges", b =>
                {
                    b.Property<int>("IdHistoriqueConges")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHistoriqueConges"));

                    b.Property<int>("IdConges")
                        .HasColumnType("int");

                    b.HasKey("IdHistoriqueConges");

                    b.HasIndex("IdConges");

                    b.ToTable("HistoriqueConges");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Planning", b =>
                {
                    b.Property<int>("IdPlanning")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPlanning"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeIdEmploye")
                        .HasColumnType("int");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdPlanning");

                    b.HasIndex("EmployeIdEmploye");

                    b.ToTable("Plannings");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Pointage", b =>
                {
                    b.Property<int>("IdPointage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPointage"));

                    b.Property<int?>("EmployesIdEmploye")
                        .HasColumnType("int");

                    b.Property<DateTime>("HeureEntree")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("HeureSortie")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.HasKey("IdPointage");

                    b.HasIndex("EmployesIdEmploye");

                    b.HasIndex("IdEmploye");

                    b.ToTable("Pointages");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.ReconnaissanceFaciale", b =>
                {
                    b.Property<int>("IdReconnaissanceFaciale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdReconnaissanceFaciale"));

                    b.Property<DateTime>("HeureDetectee")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<string>("ImageFaciale")
                        .HasColumnType("longtext");

                    b.HasKey("IdReconnaissanceFaciale");

                    b.HasIndex("IdEmploye");

                    b.ToTable("ReconnaissanceFaciales");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Salaire", b =>
                {
                    b.Property<int>("IdSalaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdSalaire"));

                    b.Property<string>("Competence")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdEmploye")
                        .HasColumnType("int");

                    b.Property<decimal>("MontantBrut")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MontantNet")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdSalaire");

                    b.HasIndex("IdEmploye");

                    b.ToTable("Salaires");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CIN")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.CongeBalance", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany()
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Conges", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany("Conges")
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.EmploiDuTemps", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.ContraintesPlanning", "ContraintesPlanning")
                        .WithMany()
                        .HasForeignKey("ContraintesPlanningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContraintesPlanning");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Employes", b =>
                {
                    b.HasOne("PFA_TEMPLATE.viewModels.Utilisateur", "Utilisateur")
                        .WithOne()
                        .HasForeignKey("PFA_TEMPLATE.Models.Employes", "IdUtilisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Notification", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany()
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFA_TEMPLATE.Models.Taches", "Tache")
                        .WithMany()
                        .HasForeignKey("IdTache")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Employe");

                    b.Navigation("Tache");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.PlageHoraire", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.EmploiDuTemps", "EmploiDuTemps")
                        .WithMany("PlagesHoraires")
                        .HasForeignKey("EmploiDuTempsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploiDuTemps");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Taches", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany("Taches")
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Absences", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany("Absences")
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Administrateur", b =>
                {
                    b.HasOne("PFA_TEMPLATE.viewModels.Utilisateur", "Utilisateur")
                        .WithOne()
                        .HasForeignKey("PFA_TEMPLATE.viewModels.Administrateur", "IdUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Contrat", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany("Contrats")
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.FicheDePaie", b =>
                {
                    b.HasOne("PFA_TEMPLATE.viewModels.Contrat", "Contrat")
                        .WithMany("FichesDePaie")
                        .HasForeignKey("IdContrat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrat");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.HistoriqueAbsences", b =>
                {
                    b.HasOne("PFA_TEMPLATE.viewModels.Absences", "Absence")
                        .WithMany()
                        .HasForeignKey("IdAbsences")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Absence");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.HistoriqueConges", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Conges", "Conges")
                        .WithMany()
                        .HasForeignKey("IdConges")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conges");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Planning", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeIdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Pointage", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", null)
                        .WithMany("Pointages")
                        .HasForeignKey("EmployesIdEmploye");

                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany()
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.ReconnaissanceFaciale", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany("ReconnaissanceFaciales")
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Salaire", b =>
                {
                    b.HasOne("PFA_TEMPLATE.Models.Employes", "Employe")
                        .WithMany("Salaires")
                        .HasForeignKey("IdEmploye")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.EmploiDuTemps", b =>
                {
                    b.Navigation("PlagesHoraires");
                });

            modelBuilder.Entity("PFA_TEMPLATE.Models.Employes", b =>
                {
                    b.Navigation("Absences");

                    b.Navigation("Conges");

                    b.Navigation("Contrats");

                    b.Navigation("Pointages");

                    b.Navigation("ReconnaissanceFaciales");

                    b.Navigation("Salaires");

                    b.Navigation("Taches");
                });

            modelBuilder.Entity("PFA_TEMPLATE.viewModels.Contrat", b =>
                {
                    b.Navigation("FichesDePaie");
                });
#pragma warning restore 612, 618
        }
    }
}
