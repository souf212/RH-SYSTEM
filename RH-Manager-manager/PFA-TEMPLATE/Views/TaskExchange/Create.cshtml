@model PFA_TEMPLATE.Models.TaskExchangeViewModel

@{
    ViewData["Title"] = "Echange des taches"; Layout = "~/Views/Shared/_UserLayout.cshtml";

}

<div class="container">
    <h2>@ViewData["Title"]</h2>
    <hr />

    <div class="row">
        <div class="col-md-8">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5>My Tasks</h5>
                    </div>
                    <div class="card-body">
                        @if (ViewBag.MyTasks != null && ((List<Taches>)ViewBag.MyTasks).Count > 0)
                        {
                            <div class="form-group">
                                <label class="control-label">Select your task to exchange:</label>
                                <select asp-for="RequestorTaskId" class="form-control" required>
                                    <option value="">-- Select Your Task --</option>
                                    @foreach (var task in ViewBag.MyTasks)
                                    {
                                        <option value="@task.IdTaches">@task.Titre (Due: @task.CreatedAt?.ToString("d"))</option>
                                    }
                                </select>
                                <span asp-validation-for="RequestorTaskId" class="text-danger"></span>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">You don't have any tasks available for exchange.</div>
                        }
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Exchange With</h5>
                    </div>
                    <div class="card-body">
                        @if (ViewBag.EmployeesWithTasks != null && ((List<Employes>)ViewBag.EmployeesWithTasks).Count > 0)
                        {
                            <div class="form-group">
                                <label class="control-label">Select employee:</label>
                                <select id="employeeSelect" class="form-control" required>
                                    <option value="">-- Select Employee --</option>
                                    @foreach (var employee in ViewBag.EmployeesWithTasks)
                                    {
                                        <option value="@employee.IdEmploye" data-tasks='@Json.Serialize(employee.Taches)'>
                                            @employee.Utilisateur.NomComplet (@employee.Taches.Count tasks)
                                        </option>
                                    }
                                </select>
                                <input type="hidden" asp-for="ReceiverId" />
                                <span asp-validation-for="ReceiverId" class="text-danger"></span>
                            </div>

                            <div class="form-group hidden" id="taskSelection">
                                <label class="control-label">Select their task:</label>
                                <select asp-for="ReceiverTaskId" class="form-control" required>
                                    <option value="">-- Select Their Task --</option>
                                </select>
                                <span asp-validation-for="ReceiverTaskId" class="text-danger"></span>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">No other employees with available tasks found.</div>
                        }
                    </div>
                </div>

                <div class="form-group hidden" id="taskSelection">

                    <label asp-for="Reason" class="control-label"></label>
                    <textarea asp-for="Reason" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Reason" class="text-danger"></span>
                </div>

                <div class="form-group mt-3">
                    <input type="submit" value="Request Exchange" class="btn btn-primary" />
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
                $('#employeeSelect').change(function () {
            var selectedEmployee = $(this).find('option:selected');
            var tasksJson = selectedEmployee.attr('data-tasks'); // Get JSON
            var receiverId = selectedEmployee.val();

            $('#ReceiverId').val(receiverId);

            console.log("Selected Employee ID:", receiverId);
            console.log("Tasks JSON:", tasksJson);

            $('#debugOutput').text(tasksJson); // Debugging: Show JSON in UI

            var tasks = JSON.parse(tasksJson || "[]"); // Convert JSON string to object
            var taskSelect = $('#ReceiverTaskId');
            taskSelect.empty().append('<option value="">-- Select Their Task --</option>');

            if (tasks.length > 0) {
                $.each(tasks, function (index, task) {
                    taskSelect.append($('<option></option>').attr('value', task.idTaches).text(task.nom +
                        (task.dateEcheance ? ' (Due: ' + new Date(task.dateEcheance).toLocaleDateString() + ')' : '')));
                });

                $('#taskSelection').show();
            } else {
                $('#taskSelection').hide();
            }
        });
        </script>

}